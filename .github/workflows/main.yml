name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Build and push Docker image to ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_URI }} .

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_URI }}

      # Step 4: SSH into EC2 and deploy the new image
      - name: SSH into EC2 and deploy
        env:
          EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}  # GitHub secret for your private key
          EC2_USER: ${{ secrets.EC2_USER }}  # EC2 username (e.g., ec2-user, ubuntu)
          EC2_PUBLIC_IP: 13.126.160.215  # Public IP of your EC2 instance
        run: |
          # Save the SSH private key to a file named ssh.pem
          echo "$EC2_SSH_PRIVATE_KEY" > ssh.pem
          chmod 600 ssh.pem  # Set permissions for the private key file

          # SSH into the EC2 instance using the private key and public IP
          ssh -o StrictHostKeyChecking=no -i ssh.pem $EC2_USER@$EC2_PUBLIC_IP << 'EOF'
            # Install AWS CLI if not installed
            if ! command -v aws &> /dev/null; then
              echo "AWS CLI not found, installing..."
              sudo apt-get update
              sudo apt-get install -y awscli
            fi

            # Get login credentials from ECR and authenticate Docker
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

            # Pull the Docker image from ECR
            docker pull ${{ secrets.ECR_REPOSITORY_URI }}

            # Run the Docker container (adjust the run command as per your needs)
            docker run -d -p 80:80 ${{ secrets.ECR_REPOSITORY_URI }}
          EOF

      # Step 5: Test the service
      - name: Test the service
        run: |
          curl http://13.126.160.215:80  # Test the service via EC2 public IP and port 80
